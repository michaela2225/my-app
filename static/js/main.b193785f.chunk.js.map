{"version":3,"sources":["constants.js","exployee-context.js","views/employees-list/employees-list.jsx","views/date-brithday-list/date-brithday-list.jsx","App.js","reportWebVitals.js","index.js"],"names":["employeesWithLetter","letter","employees","employeesWithMonth","month","EmployeeContext","createContext","EmployeesList","useContext","setEmployees","className","map","item","index","length","employee","lastName","type","onChange","showDateBirthday","defaultChecked","id","DateBrithdayList","employeesWithDob","forEach","push","dob","split","find","e","filter","App","useState","finalListEmployee","setFinalListEmployee","useEffect","fetch","then","response","json","data","sort","first","second","moment","format","sorteredArr","Provider","value","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b193785f.chunk.js","sourcesContent":["export const employeeApiUrl =\n  'https://yalantis-react-school-api.yalantis.com/api/task0/users';\n\nexport const employeesWithLetter = [\n  {\n    letter: 'A',\n    employees: [],\n  },\n  {\n    letter: 'B',\n    employees: [],\n  },\n  {\n    letter: 'C',\n    employees: [],\n  },\n  {\n    letter: 'D',\n    employees: [],\n  },\n  {\n    letter: 'E',\n    employees: [],\n  },\n  {\n    letter: 'F',\n    employees: [],\n  },\n  {\n    letter: 'G',\n    employees: [],\n  },\n  {\n    letter: 'H',\n    employees: [],\n  },\n  {\n    letter: 'I',\n    employees: [],\n  },\n  {\n    letter: 'J',\n    employees: [],\n  },\n  {\n    letter: 'K',\n    employees: [],\n  },\n  {\n    letter: 'L',\n    employees: [],\n  },\n  {\n    letter: 'M',\n    employees: [],\n  },\n  {\n    letter: 'N',\n    employees: [],\n  },\n  {\n    letter: 'O',\n    employees: [],\n  },\n  {\n    letter: 'P',\n    employees: [],\n  },\n  {\n    letter: 'Q',\n    employees: [],\n  },\n  {\n    letter: 'R',\n    employees: [],\n  },\n  {\n    letter: 'S',\n    employees: [],\n  },\n  {\n    letter: 'T',\n    employees: [],\n  },\n  {\n    letter: 'U',\n    employees: [],\n  },\n  {\n    letter: 'V',\n    employees: [],\n  },\n  {\n    letter: 'W',\n    employees: [],\n  },\n  {\n    letter: 'X',\n    employees: [],\n  },\n  {\n    letter: 'Y',\n    employees: [],\n  },\n  {\n    letter: 'Z',\n    employees: [],\n  },\n];\n\nexport const employeesWithMonth = [\n  {\n    month: 'January',\n    employees: [],\n  },\n  {\n    month: 'February',\n    employees: [],\n  },\n  {\n    month: 'March',\n    employees: [],\n  },\n  {\n    month: 'April',\n    employees: [],\n  },\n  {\n    month: 'May',\n    employees: [],\n  },\n  {\n    month: 'June',\n    employees: [],\n  },\n  {\n    month: 'July',\n    employees: [],\n  },\n  {\n    month: 'August',\n    employees: [],\n  },\n  {\n    month: 'September',\n    employees: [],\n  },\n  {\n    month: 'October',\n    employees: [],\n  },\n  {\n    month: 'November',\n    employees: [],\n  },\n  {\n    month: 'December',\n    employees: [],\n  },\n];\n","import { createContext } from \"react\";\n\nexport const EmployeeContext = createContext();","import React, { useContext } from 'react';\nimport { EmployeeContext } from '../../exployee-context';\n\nimport './employees-list.css';\n\nconst EmployeesList = () => {\n  const { employees, setEmployees } = useContext(EmployeeContext);\n  return (\n    <div className=\"list-wr\">\n      {employees.map((item, index) => (\n        <ul key={`employee-${index}`} className=\"list\">\n          <li className=\"list-letter\">{item.letter}</li>\n          {item.employees.length > 0 ? (\n            <ul>\n              {item.employees.map((employee) => (\n                <li key={employee.id} className=\"list-element\">\n                  <div>{employee.lastName}</div>\n                  <input\n                    type=\"checkbox\"\n                    onChange={() => {\n                      employee.showDateBirthday = !employee.showDateBirthday;\n                      setEmployees([...employees]);\n                    }}\n                    defaultChecked={employee.showDateBirthday}\n                  />\n                </li>\n              ))}\n            </ul>\n          ) : (\n            <div className=\"list-element\">----</div>\n          )}\n        </ul>\n      ))}\n    </div>\n  );\n};\n\nexport default EmployeesList;\n","import React, { useContext } from 'react';\nimport { EmployeeContext } from '../../exployee-context';\n\nimport { employeesWithMonth } from '../../constants';\n\nimport './date-brithday-list.css';\n\nconst DateBrithdayList = () => {\n  const { employees } = useContext(EmployeeContext);\n  const employeesWithDob = [];\n\n  employees.forEach((item) => {\n    item.employees.forEach(\n      (employee) =>\n        employee.showDateBirthday && employeesWithDob.push(employee),\n    );\n  });\n\n  employeesWithMonth.forEach((item) => {\n    employeesWithDob.forEach((employee) => {\n      if (item.month === employee.dob.split(' ')[1]) {\n        const id = item.employees.find((e) => e.id === employee.id);\n        !id && item.employees.push(employee);\n      }\n    });\n\n    item.employees = item.employees.filter((e) => e.showDateBirthday);\n  });\n\n  return (\n    <div className=\"list-dob-wr\">\n      <div className=\"list-title\">Employees birthday</div>\n      {employeesWithMonth.map((item, index) => (\n        <ul key={`employee-dob-${index}`}>\n          {item.employees.length > 0 ? (\n            <>\n              <li className=\"list-title\">{item.month}</li>\n              <ul>\n                {item.employees.map((employee) => (\n                  <li key={`dob-${employee.id}`} className=\"list-dob-element\">\n                    <div>{`${employee.lastName} ${employee.dob}`}</div>\n                  </li>\n                ))}\n              </ul>\n            </>\n          ) : (\n            <></>\n          )}\n        </ul>\n      ))}\n    </div>\n  );\n};\n\nexport default DateBrithdayList;\n","import React, { useState, useEffect } from 'react';\nimport moment from 'moment';\n\nimport { employeesWithLetter, employeeApiUrl } from './constants';\nimport { EmployeeContext } from './exployee-context';\n\nimport EmployeesList from './views/employees-list/employees-list';\nimport DateBrithdayList from './views/date-brithday-list/date-brithday-list';\n\nimport './App.css';\n\nconst App = () => {\n  const [finalListEmployee, setFinalListEmployee] = useState([]);\n\n  useEffect(() => {\n    fetch(employeeApiUrl)\n      .then((response) => response.json())\n      .then((data) => {\n        data.sort((first, second) =>\n          second.lastName > first.lastName ? -1 : 1,\n        );\n        data.forEach((employee) => {\n          employee.showDateBirthday = false;\n          employee.dob = moment(employee.dob).format('D MMMM YYYY');\n        });\n        return data;\n      })\n      .then((sorteredArr) => {\n        employeesWithLetter.forEach((item) => {\n          sorteredArr.forEach((employee) => {\n            employee.lastName[0] === item.letter &&\n              item.employees.push(employee);\n          });\n        });\n        setFinalListEmployee(employeesWithLetter);\n      });\n  }, []);\n\n  return (\n    <div className=\"main-wr\">\n      <EmployeeContext.Provider\n        value={{\n          employees: finalListEmployee,\n          setEmployees: setFinalListEmployee,\n        }}\n      >\n        <EmployeesList />\n        <DateBrithdayList />\n      </EmployeeContext.Provider>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}